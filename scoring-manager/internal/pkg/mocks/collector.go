// Code generated by MockGen. DO NOT EDIT.
// Source: scoring-manager/internal/client/grpc/collector_client.go
//
// Generated by this command:
//
//	mockgen -source=scoring-manager/internal/client/grpc/collector_client.go -destination=scoring-manager/internal/pkg/mocks/collector.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	repository "github.com/KlassnayaAfrodita/github-user-score/scoring-manager/internal/client/repository"
	gomock "github.com/golang/mock/gomock"
)

// MockCollectorClientInterface is a mock of CollectorClientInterface interface.
type MockCollectorClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCollectorClientInterfaceMockRecorder
	isgomock struct{}
}

// MockCollectorClientInterfaceMockRecorder is the mock recorder for MockCollectorClientInterface.
type MockCollectorClientInterfaceMockRecorder struct {
	mock *MockCollectorClientInterface
}

// NewMockCollectorClientInterface creates a new mock instance.
func NewMockCollectorClientInterface(ctrl *gomock.Controller) *MockCollectorClientInterface {
	mock := &MockCollectorClientInterface{ctrl: ctrl}
	mock.recorder = &MockCollectorClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCollectorClientInterface) EXPECT() *MockCollectorClientInterfaceMockRecorder {
	return m.recorder
}

// GetUserStats mocks base method.
func (m *MockCollectorClientInterface) GetUserStats(ctx context.Context, username string) (repository.UserStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserStats", ctx, username)
	ret0, _ := ret[0].(repository.UserStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserStats indicates an expected call of GetUserStats.
func (mr *MockCollectorClientInterfaceMockRecorder) GetUserStats(ctx, username any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserStats", reflect.TypeOf((*MockCollectorClientInterface)(nil).GetUserStats), ctx, username)
}
